{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","img","src","alt","message","imglike","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","posts","map","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","status_bar","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","type","ProfileInfo","profile","profileHeader","photos","large","Preloader","Profile","ProfileContainer","userId","this","params","authorizedUserId","getUserProfile","getStatus","React","Component","compose","auth","id","isAuth","WrappedComponent","useParams","withAuthRedirect"],"mappings":"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","file":"static/js/3.6debf13e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__3JERL\",\"profile\":\"ProfileInfo_profile__YrMfi\",\"profileHeader\":\"ProfileInfo_profileHeader__pBewI\",\"status_bar\":\"ProfileInfo_status_bar__bYyw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3CAVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1J2kg\",\"img\":\"Post_img__3tX_Z\",\"imglike\":\"Post_imglike__1exNd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__vMyx-\"};","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img className={s.img} src=\"https://thomas-philippot.dev/img/avatar.svg\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>\r\n          <img className={s.imglike} src=\"https://image.pngaaa.com/950/1517950-small.png\" alt=\"\" /> Like {props.likesCount} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post.jsx';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from './../../../utils/validators';\r\nimport { Textarea } from '../../common/FormControls/FormsControls';\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements =\r\n    props.posts.map(posts => <Post message={posts.message} likesCount={posts.likesCount} />);\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }  \r\n  return (\r\n    <div>\r\n      <h3>My posts</h3>\r\n     <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText'\r\n          placeholder='Write your post' validate={[required, maxLength10]} />\r\n      </div>\r\n      <div><button>Add Post</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'}) (AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n} \r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status] )\r\n\r\n  const activatedEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n  const deactivatedEditMode = () => {\r\n    setEditMode(false);\r\n    ;\r\n    props.updateStatus(status);\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div className={s.status_bar}>\r\n          <span\r\n            onClick={activatedEditMode}\r\n          >-{props.status}-</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus\r\n            onBlur={deactivatedEditMode} type=\"text\"\r\n            value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.profileHeader}>\r\n        <div >\r\n          <img className={s.img} src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\" alt=\"\" />\r\n         \r\n        </div>\r\n        <div className={s.profile}>\r\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            <img src={props.profile.photos.large} />\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />      \r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n ","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getUserProfile, getStatus, updateStatus } from './../../redux/profile-reducer';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n  const params = useParams();\r\n  return (\r\n    <WrappedComponent\r\n      {...props}\r\n      params={params}\r\n    />\r\n  );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile}\r\n          status={this.props.status} updateStatus={this.props.updateStatus} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}