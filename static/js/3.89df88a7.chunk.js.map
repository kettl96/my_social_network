{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","img","src","alt","message","imglike","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","posts","map","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileDataFormReduxForm","profile","error","styles","formSummaryError","createField","Input","type","contacts","Object","keys","key","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","status_bar","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","profileHeader","photos","large","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Profile","ProfileContainer","userId","this","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","WrappedComponent","useParams","withAuthRedirect"],"mappings":"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","file":"static/js/3.89df88a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__3JERL\",\"profile\":\"ProfileInfo_profile__YrMfi\",\"profileHeader\":\"ProfileInfo_profileHeader__pBewI\",\"status_bar\":\"ProfileInfo_status_bar__bYyw2\",\"contacts\":\"ProfileInfo_contacts__XvQob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3CAVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1J2kg\",\"img\":\"Post_img__3tX_Z\",\"imglike\":\"Post_imglike__1exNd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__vMyx-\"};","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img className={s.img} src=\"https://thomas-philippot.dev/img/avatar.svg\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>\r\n          <img className={s.imglike} src=\"https://image.pngaaa.com/950/1517950-small.png\" alt=\"\" /> Like {props.likesCount} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post.jsx';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from './../../../utils/validators';\r\nimport { Textarea } from '../../common/FormControls/FormsControls';\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements =\r\n    props.posts.map(posts => <Post key={posts.id} message={posts.message} likesCount={posts.likesCount} />);\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }  \r\n  return (\r\n    <div>\r\n      <h3>My posts</h3>\r\n     <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText'\r\n          placeholder='Write your post' validate={[required, maxLength10]} />\r\n      </div>\r\n      <div><button>Add Post</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'}) (AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n} \r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport { createField, Input, Textarea } from './../../common/FormControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport styles from \"../../common/FormControls/FormsControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error }) => {\r\n  return <form onSubmit={handleSubmit}>\r\n    <div><button>Save</button></div>\r\n    { error && <div className={styles.formSummaryError}>\r\n          {error}\r\n        </div>\r\n      }\r\n    <div>\r\n      <b>Full name:</b> {createField('Full name', 'fullName', [], Input)}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job:</b> {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n    </div>\r\n    <div>\r\n      <b>My professional skills:</b>\r\n      {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n    </div>\r\n\r\n    <div>\r\n      <b>About me:</b> {createField('About me', 'aboutMe', [], Textarea)}\r\n    </div>\r\n    <div className={s.contacts}>\r\n    <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n      return <div key={key}>\r\n        {key}: {createField(key, 'contacts.' + key, [], Input)}\r\n      </div>\r\n      \r\n      \r\n      // <Contact key={key}\r\n      //   contactTitle={key}\r\n      //   contactValue={profile.contacts[key]} />\r\n    })}\r\n  </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status] )\r\n\r\n  const activatedEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n  const deactivatedEditMode = () => {\r\n    setEditMode(false);\r\n    ;\r\n    props.updateStatus(status);\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div className={s.status_bar}>\r\n          <span\r\n            onClick={activatedEditMode}\r\n          >-{props.status}-</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus\r\n            onBlur={deactivatedEditMode} type=\"text\"\r\n            value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React, { useState } from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nlet ava = 'https://static.vecteezy.com/system/resources/thumbnails/001/993/889/small/beautiful-latin-woman-avatar-character-icon-free-vector.jpg';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(()=> {\r\n      setEditMode(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.profileHeader}>\r\n        <div >\r\n          <img className={s.img} src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\" alt=\"\" />\r\n        </div>\r\n        <div className={s.profile}>\r\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\r\n          <img src={props.profile.photos.large || ava} />\r\n          {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n          : <ProfileData profile={props.profile} \r\n          isOwner={props.isOwner} goToEditMode={()=> {setEditMode(true)}}\r\n          />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n    <div>\r\n      <b>Full name:</b> {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job:</b> {profile.lookingForAJob ? 'Yes' : 'No'}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>About me:</b> {profile.aboutMe}\r\n    </div>\r\n    <div className={s.contacts}>\r\n      <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key}\r\n          contactTitle={key}\r\n          contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div>{contactTitle}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        saveProfile={props.saveProfile}\r\n        updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from './../../redux/profile-reducer';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n\r\n  const params = useParams();\r\n  return (\r\n    <WrappedComponent\r\n      {...props}\r\n      params={params}\r\n    />\r\n  );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.params.userId != prevProps.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          isOwner={!this.props.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}