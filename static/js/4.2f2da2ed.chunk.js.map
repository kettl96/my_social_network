{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","src","img","name","Message","isMine","message","messageLeft","messageRight","innerMessage","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogs_items","values","sendMessage","newMessageBody","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,6BAA6B,aAAe,gC,oICO9SC,EAAa,SAACC,GAClB,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACL,eAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,UACE,qBAAKC,IAAKP,EAAMQ,MAAQR,EAAMS,WAK9BC,EAAU,SAACV,GAEf,IAAcW,EAQd,OAAO,qBAAKV,UAAWC,IAAEU,QAAU,KARrBD,EAQkCX,EAAMW,OAPhDA,EACKT,IAAEW,YAEFX,IAAEY,cAIN,SACL,qBAAKb,UAAWC,IAAEa,aAAlB,SAAiCf,EAAMY,aAuCrCI,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACjB,GACtB,OACE,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUd,KAAK,iBAC/Be,YAAY,qBAAqBC,SAAUC,QAE/C,8BAAK,kDAMIC,EArCC,SAAC3B,GACf,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAA7B,GAAM,OAC5C,cAAC,EAAD,CAAYM,KAAMN,EAAOM,KAAsBH,GAAIH,EAAOG,GAAIE,IAAKL,EAAOK,KAAtCL,EAAOG,OAEzC2B,EAAmBL,EAAMM,SAASF,KAAI,SAAApB,GAAO,OAC/C,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BN,GAAIM,EAAQN,GAAIK,OAAQC,EAAQD,QAA5CC,EAAQN,OAKlD,OACE,sBAAKL,UAAWC,IAAE6B,QAAlB,UACE,qBAAK9B,UAAWC,IAAEiC,cAAlB,SACGL,IAEH,sBAAK7B,UAAWC,IAAEgC,SAAlB,UACE,8BAAMD,IACR,cAACjB,EAAD,CAAqBG,SAVL,SAACiB,GACnBpC,EAAMqC,YAAYD,EAAOE,0B,eCrBdC,sBACbC,aAdoB,SAACZ,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAGE,SAACY,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAwBJ,SAOrCK,IAFaJ,CAGZZ","file":"static/js/4.2f2da2ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3BWfB\",\"dialogs_items\":\"Dialogs_dialogs_items__BPzmY\",\"dialog\":\"Dialogs_dialog__1g8rx\",\"messages\":\"Dialogs_messages__3DZAY\",\"message\":\"Dialogs_message__2zKx6\",\"innerMessage\":\"Dialogs_innerMessage__191ys\",\"messageLeft\":\"Dialogs_messageLeft__1VjQe\",\"messageRight\":\"Dialogs_messageRight__3vnNE\"};","import React from 'react';\r\nimport { Navigate, NavLink, Route, Routes } from 'react-router-dom';\r\nimport s from './Dialogs.module.css'\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Textarea } from './../common/FormControls/FormsControls';\r\nimport { required } from './../../utils/validators';\r\n\r\nconst DialogItem = (props) => {\r\n  return <div className={s.dialog + ' ' + s.active}>\r\n    <NavLink to={\"/dialogs/\" + props.id}>\r\n      <img src={props.img} />{props.name}\r\n    </NavLink>\r\n  </div>\r\n}\r\n\r\nconst Message = (props) => {\r\n\r\n  let isMine = (isMine) => {\r\n    if (isMine) {\r\n      return s.messageLeft;\r\n    } else {\r\n      return s.messageRight;\r\n    }\r\n\r\n  };\r\n  return <div className={s.message + ' ' + isMine(props.isMine)}>\r\n    <div className={s.innerMessage}>{props.message}</div>\r\n  </div>\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(dialog =>\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} img={dialog.img} />);\r\n\r\n  let messagesElements = state.messages.map(message =>\r\n    <Message message={message.message} key={message.id} id={message.id} isMine={message.isMine} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_items}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newMessageBody'\r\n          placeholder='Enter your message' validate={required} />\r\n      </div>\r\n      <div><button>Send</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect)\r\n  (Dialogs);\r\n\r\n"],"sourceRoot":""}